generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model attendance {
  AttendanceID String            @id @unique(map: "attendance_AttendanceID") @db.VarChar(4)
  StudentID    String            @db.VarChar(10)
  SubjectID    String            @db.VarChar(10)
  Date         DateTime          @db.Date
  Status       attendance_Status
  student      student           @relation(fields: [StudentID], references: [AdmissionNumber], onDelete: NoAction, onUpdate: NoAction, map: "attendance_ibfk_1")
  subject      subject           @relation(fields: [SubjectID], references: [SubjectID], onDelete: NoAction, onUpdate: NoAction, map: "attendance_ibfk_2")

  @@index([StudentID], map: "attendance_StudentID_idx")
  @@index([SubjectID], map: "attendance_SubjectID_idx")
}

/// This model has been renamed to 'Renamedclass' during introspection, because the original name 'class' is reserved.
model Renamedclass {
  ClassID   String    @id @unique(map: "class_ClassID") @db.VarChar(10)
  ClassName String    @db.VarChar(20)
  student   student[]

  @@map("class")
}

model grade {
  GradeID    String  @id @unique(map: "grade_GradeID") @db.VarChar(4)
  StudentID  String  @db.VarChar(10)
  SubjectID  String  @db.VarChar(10)
  Term       String  @db.VarChar(10)
  CA         Int?
  Exam       Int?
  TotalScore Int?
  Grade      String? @db.VarChar(3)
  student    student @relation(fields: [StudentID], references: [AdmissionNumber], onDelete: NoAction, onUpdate: NoAction, map: "grade_ibfk_1")
  subject    subject @relation(fields: [SubjectID], references: [SubjectID], onDelete: NoAction, onUpdate: NoAction, map: "grade_ibfk_2")

  @@index([StudentID], map: "grade_StudentID_idx")
  @@index([SubjectID], map: "grade_SubjectID_idx")
}

model parent {
  ParentID      String    @id @unique(map: "parent_ParentID") @db.VarChar(10)
  ContactNumber String    @db.VarChar(15)
  person        person    @relation(fields: [ParentID], references: [PersonID], onDelete: NoAction, onUpdate: NoAction, map: "parent_ibfk_1")
  student       student[]
}

model payment {
  TransactionID    Int                   @id @unique(map: "payment_TransactionID")
  StudentID        String                @db.VarChar(10)
  Amount           Decimal               @db.Decimal(10, 2)
  PaymentDate      DateTime              @db.Date
  PaymentMethod    payment_PaymentMethod
  Confirmation     Boolean
  ReceiptGenerated Boolean
  Term             String                @db.VarChar(10)
  student          student               @relation(fields: [StudentID], references: [AdmissionNumber], onDelete: NoAction, onUpdate: NoAction, map: "payment_ibfk_1")

  @@index([StudentID], map: "payment_StudentID_idx")
}

model person {
  PersonID  String   @id @db.VarChar(10)
  FirstName String   @db.VarChar(50)
  LastName  String   @db.VarChar(50)
  parent    parent?
  teacher   teacher?
}

model registration {
  RegistrationID String  @id @unique(map: "registration_RegistrationID") @db.VarChar(4)
  StudentID      String  @db.VarChar(10)
  SubjectID      String  @db.VarChar(10)
  Term           String  @db.VarChar(10)
  student        student @relation(fields: [StudentID], references: [AdmissionNumber], onDelete: NoAction, onUpdate: NoAction, map: "registration_ibfk_1")
  subject        subject @relation(fields: [SubjectID], references: [SubjectID], onDelete: NoAction, onUpdate: NoAction, map: "registration_ibfk_2")

  @@index([StudentID], map: "registration_StudentID_idx")
  @@index([SubjectID], map: "registration_SubjectID_idx")
}

model student {
  AdmissionNumber String         @id @unique(map: "student_AdmissionNumber") @db.VarChar(10)
  DateOfBirth     DateTime       @db.Date
  Gender          student_Gender
  StudentClassID  String         @db.VarChar(10)
  ParentContact   String?        @db.VarChar(15)
  Address         String?        @db.VarChar(100)
  ParentID        String?        @db.VarChar(10)
  attendance      attendance[]
  grade           grade[]
  payment         payment[]
  registration    registration[]
  parent          parent?        @relation(fields: [ParentID], references: [ParentID], onDelete: NoAction, onUpdate: NoAction, map: "student_ibfk_1")
  Renamedclass    Renamedclass   @relation(fields: [StudentClassID], references: [ClassID], onDelete: NoAction, onUpdate: NoAction, map: "student_ibfk_2")

  @@index([ParentID], map: "student_ParentID_idx")
  @@index([StudentClassID], map: "student_StudentClassID_idx")
}

model subject {
  SubjectID    String         @id @unique(map: "subject_SubjectID") @db.VarChar(10)
  SubjectName  String         @db.VarChar(50)
  TeacherID    String?        @db.VarChar(10)
  ClassLevel   String         @db.VarChar(10)
  attendance   attendance[]
  grade        grade[]
  registration registration[]
  teacher      teacher?       @relation(fields: [TeacherID], references: [TeacherID], onDelete: NoAction, onUpdate: NoAction, map: "subject_ibfk_1")

  @@index([TeacherID], map: "subject_TeacherID_idx")
}

model teacher {
  TeacherID String    @id @unique(map: "teacher_TeacherID") @db.VarChar(10)
  PhoneNum  String?   @db.VarChar(15)
  Email     String?   @db.VarChar(50)
  Address   String?   @db.VarChar(100)
  subject   subject[]
  person    person    @relation(fields: [TeacherID], references: [PersonID], onDelete: NoAction, onUpdate: NoAction, map: "teacher_ibfk_1")
}

enum student_Gender {
  M
  F
}

enum attendance_Status {
  PRESENT @map("1")
  ABSENT  @map("0")
}

enum payment_PaymentMethod {
  Cash
  Transfer
}
